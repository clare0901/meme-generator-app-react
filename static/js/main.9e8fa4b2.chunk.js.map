{"version":3,"sources":["components/MemeGenerator.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["MemeGenerator","state","topText","bottomText","randomImg","memeImages","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","memes","randomMemeImg","Math","floor","random","length","url","fetch","then","response","json","data","className","onSubmit","this","type","placeholder","onChange","src","alt","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA0EeA,E,4MAvEbC,MAAQ,CACNC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,WAAY,I,EAGdC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,aAAe,SAACL,GACdA,EAAMM,iBACN,IAAMC,EAAQ,EAAKb,MAAMI,WAAWS,MAC9BC,EAAgBD,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAC7D,EAAKR,SAAS,CACZP,UAAWW,EAAcK,O,uDAI7B,WAAqB,IAAD,OAClBC,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAEL,EAAKZ,SAAS,CACZN,WAAYkB,EAASE,Y,oBAK7B,WACE,OAEE,cADA,CACA,OAAKC,UAAU,UAAf,UACE,uBAAMA,UAAU,UAAUC,SAAUC,KAAKhB,aAAzC,UACE,uBACEiB,KAAK,OACLC,YAAY,WACZrB,KAAK,UACLC,MAAOkB,KAAK3B,MAAMC,QAClB6B,SAAUH,KAAKtB,eAEjB,uBACEuB,KAAK,OACLC,YAAY,cACZrB,KAAK,aACLC,MAAOkB,KAAK3B,MAAME,WAClB4B,SAAUH,KAAKtB,eAEjB,wBAAQoB,UAAU,kBAAlB,oBAGF,sBAAKA,UAAU,UAAf,UACE,qBACEA,UAAU,QACVM,IAAKJ,KAAK3B,MAAMG,UAChB6B,IAAI,cAEN,oBAAIP,UAAU,UAAd,SAAyBE,KAAK3B,MAAMC,UACpC,oBAAIwB,UAAU,aAAd,SAA4BE,KAAK3B,MAAME,uB,GAhErB+B,a,MCUbC,MARf,WACI,OACI,wBAAQT,UAAU,SAAlB,SACI,mBAAGA,UAAU,QAAb,+BCUGU,MATf,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCASW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9e8fa4b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass MemeGenerator extends Component {\r\n  state = {\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n    memeImages: [],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const memes = this.state.memeImages.memes;\r\n    const randomMemeImg = memes[Math.floor(Math.random() * memes.length)];\r\n    this.setState({\r\n      randomImg: randomMemeImg.url,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        // console.log(data)\r\n        this.setState({\r\n          memeImages: response.data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // console.log(this.state.memeImages)\r\n      <div className=\"mainDiv\">\r\n        <form className=\"textDiv\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Top Text\"\r\n            name=\"topText\"\r\n            value={this.state.topText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Bottom Text\"\r\n            name=\"bottomText\"\r\n            value={this.state.bottomText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"generate_button\">Gen</button>\r\n        </form>\r\n\r\n        <div className=\"memeDiv\">\r\n          <img\r\n            className=\"image\"\r\n            src={this.state.randomImg}\r\n            alt=\"MemeImage\"\r\n          ></img>\r\n          <h2 className=\"topText\">{this.state.topText}</h2>\r\n          <h2 className=\"bottomText\">{this.state.bottomText}</h2>\r\n          {/* <button className=\"download_button\">Download</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <p className=\"title\">Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","// import logo from './logo.svg';\n// https://api.imgflip.com/get_memes\n\nimport React from \"react\";\nimport './App.css';\nimport MemeGenerator from \"./components/MemeGenerator\";\nimport Header from \"./components/Header\"\n\nfunction App(){\n  return(\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}